// Process Visualization Component - Systematic Methodology
// =======================================================

.ProcessStep {
  position: relative;
  display: flex;
  gap: map-get($Scale, 'lg');
  
  &__Number {
    position: relative;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  &__NumberCircle {
    width: map-get($Scale, 'xxxl');
    height: map-get($Scale, 'xxxl');
    background: linear-gradient(135deg, map-get($AccentColors, 'gold'), lighten(map-get($AccentColors, 'gold'), 15%));
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 2;
    box-shadow: map-get($BoxShadow, 'soft');
    transition: map-get($Transition, 'medium');
    
    &::before {
      content: '';
      position: absolute;
      top: -4px;
      left: -4px;
      right: -4px;
      bottom: -4px;
      border: 2px solid rgba(map-get($AccentColors, 'gold'), 0.3);
      border-radius: 50%;
      opacity: 0;
      transform: scale(0.8);
      transition: map-get($Transition, 'medium');
    }
    
    .ProcessStep:hover & {
      transform: scale(1.05);
      
      &::before {
        opacity: 1;
        transform: scale(1);
      }
    }
  }
  
  &__NumberText {
    font-size: map-get($FontSizes, 'lead');
    font-weight: map-get($FontWeight, 'bold');
    color: $ColorCharcoal;
    font-family: $FontMono;
  }
  
  &__Connector {
    position: relative;
    height: calc(100% + #{map-get($Scale, 'xl')});
    width: 2px;
    margin-top: map-get($Scale, 'base');
  }
  
  &__ConnectorLine {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, 
      map-get($AccentColors, 'gold'), 
      rgba(map-get($AccentColors, 'gold'), 0.3)
    );
    
    &::before {
      content: '';
      position: absolute;
      bottom: -6px;
      left: 50%;
      transform: translateX(-50%);
      width: 8px;
      height: 8px;
      background: map-get($AccentColors, 'gold');
      border-radius: 50%;
      box-shadow: 0 0 0 3px rgba(map-get($AccentColors, 'gold'), 0.2);
    }
  }
  
  &__Content {
    flex: 1;
    padding-bottom: map-get($Scale, 'xl');
  }
  
  &__Icon {
    width: map-get($Scale, 'xxl');
    height: map-get($Scale, 'xxl');
    background: $ColorCoolGray;
    border-radius: map-get($BorderRadius, 'md');
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: map-get($Scale, 'base');
    transition: map-get($Transition, 'medium');
    
    .material-symbols-outlined {
      font-size: map-get($Scale, 'xl');
      color: $ColorCharcoal;
      transition: map-get($Transition, 'medium');
    }
    
    .ProcessStep:hover & {
      background: rgba(map-get($AccentColors, 'gold'), 0.1);
      
      .material-symbols-outlined {
        color: map-get($AccentColors, 'gold');
        transform: scale(1.1);
      }
    }
  }
  
  &__Text {
    // Text content container
  }
  
  &__Title {
    font-size: map-get($FontSizes, 'h4');
    font-weight: map-get($FontWeight, 'bold');
    color: $ColorCharcoal;
    margin: 0 0 map-get($Scale, 'sm') 0;
    line-height: map-get($LineHeight, 'tight');
  }
  
  &__Duration {
    display: flex;
    align-items: center;
    gap: map-get($Scale, 'xs');
    margin-bottom: map-get($Scale, 'base');
    color: map-get($AccentColors, 'steel');
    font-size: map-get($FontSizes, 'small');
    font-weight: map-get($FontWeight, 'medium');
    text-transform: uppercase;
    letter-spacing: map-get($LetterSpacing, 'wide');
    
    &Icon .material-symbols-outlined {
      font-size: map-get($Scale, 'base');
    }
  }
  
  &__Description {
    p {
      color: $ColorConcrete;
      line-height: map-get($LineHeight, 'normal');
      margin: 0;
      font-size: map-get($FontSizes, 'body');
    }
  }
  
  // Layout variants
  &--horizontal {
    flex-direction: column;
    text-align: center;
    
    .ProcessStep__Number {
      align-self: center;
      margin-bottom: map-get($Scale, 'lg');
    }
    
    .ProcessStep__Connector {
      display: none;
    }
    
    .ProcessStep__Content {
      padding-bottom: 0;
    }
  }
  
  &--minimal {
    gap: map-get($Scale, 'base');
    
    .ProcessStep__NumberCircle {
      width: map-get($Scale, 'xl');
      height: map-get($Scale, 'xl');
    }
    
    .ProcessStep__NumberText {
      font-size: map-get($FontSizes, 'body');
    }
    
    .ProcessStep__Icon {
      width: map-get($Scale, 'xl');
      height: map-get($Scale, 'xl');
      margin-bottom: map-get($Scale, 'sm');
      
      .material-symbols-outlined {
        font-size: map-get($Scale, 'lg');
      }
    }
    
    .ProcessStep__Title {
      font-size: map-get($FontSizes, 'lead');
      margin-bottom: map-get($Scale, 'xs');
    }
    
    .ProcessStep__Description p {
      font-size: map-get($FontSizes, 'small');
    }
  }
}

// Process container layouts
.Process {
  &-List {
    display: flex;
    flex-direction: column;
    gap: map-get($Scale, 'base');
  }
  
  &-Grid {
    display: grid;
    gap: map-get($ComponentSpacing, 'card-gap');
    
    @include Respond('medium') {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @include Respond('large') {
      grid-template-columns: repeat(3, 1fr);
    }
    
    .ProcessStep {
      &--horizontal {
        border: 1px solid $ColorConcreteLight;
        border-radius: map-get($BorderRadius, 'md');
        padding: map-get($ComponentSpacing, 'card-padding');
        background: $ColorWarmWhite;
        box-shadow: map-get($BoxShadow, 'subtle');
        transition: map-get($Transition, 'medium');
        
        &:hover {
          transform: translateY(-2px);
          box-shadow: map-get($BoxShadow, 'soft');
          border-color: $ColorConcrete;
        }
      }
    }
  }
  
  &-Timeline {
    position: relative;
    
    &::before {
      content: '';
      position: absolute;
      left: calc(#{map-get($Scale, 'xxxl')} / 2 - 1px);
      top: calc(#{map-get($Scale, 'xxxl')} + #{map-get($Scale, 'base')});
      bottom: 0;
      width: 2px;
      background: linear-gradient(to bottom, 
        map-get($AccentColors, 'gold'), 
        rgba(map-get($AccentColors, 'gold'), 0.1)
      );
      z-index: 1;
    }
  }
}

// Special methodology section
.Methodology {
  background: linear-gradient(135deg, $ColorWarmWhite 0%, $ColorCoolGray 100%);
  border-radius: map-get($BorderRadius, 'lg');
  padding: map-get($ComponentSpacing, 'section-gap');
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, 
      map-get($AccentColors, 'gold'), 
      lighten(map-get($AccentColors, 'gold'), 20%), 
      map-get($AccentColors, 'gold')
    );
  }
  
  &__Header {
    text-align: center;
    margin-bottom: map-get($ComponentSpacing, 'section-gap');
  }
  
  &__Title {
    font-size: map-get($FontSizes, 'h2');
    font-weight: map-get($FontWeight, 'bold');
    color: $ColorCharcoal;
    margin: 0 0 map-get($Scale, 'base') 0;
    text-transform: uppercase;
    letter-spacing: map-get($LetterSpacing, 'wide');
  }
  
  &__Subtitle {
    font-size: map-get($FontSizes, 'lead');
    color: $ColorConcrete;
    margin: 0;
    font-style: italic;
  }
}

// Golden ratio visualization
.GoldenRatio-Visualization {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: map-get($Scale, 'lg');
  padding: map-get($Scale, 'xxl') 0;
  
  &__Rectangle {
    position: relative;
    
    &--large {
      width: map-get($Scale, 'massive');
      height: calc(#{map-get($Scale, 'massive')} / #{$GoldenRatio});
      background: rgba(map-get($AccentColors, 'gold'), 0.2);
      border: 2px solid map-get($AccentColors, 'gold');
    }
    
    &--medium {
      width: map-get($Scale, 'xxxl');
      height: calc(#{map-get($Scale, 'xxxl')} / #{$GoldenRatio});
      background: rgba(map-get($AccentColors, 'steel'), 0.2);
      border: 2px solid map-get($AccentColors, 'steel');
    }
    
    &--small {
      width: map-get($Scale, 'xxl');
      height: calc(#{map-get($Scale, 'xxl')} / #{$GoldenRatio});
      background: rgba($ColorConcrete, 0.2);
      border: 2px solid $ColorConcrete;
    }
  }
  
  &__Label {
    position: absolute;
    bottom: -#{map-get($Scale, 'lg')};
    left: 50%;
    transform: translateX(-50%);
    font-size: map-get($FontSizes, 'caption');
    font-weight: map-get($FontWeight, 'medium');
    color: $ColorConcrete;
    text-align: center;
    font-family: $FontMono;
  }
  
  &__Ratio {
    font-size: map-get($FontSizes, 'h3');
    font-weight: map-get($FontWeight, 'bold');
    color: map-get($AccentColors, 'gold');
    font-family: $FontMono;
    
    &::before {
      content: 'Ï† = ';
      font-style: italic;
    }
  }
}